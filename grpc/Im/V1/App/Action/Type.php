<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/schema.proto

namespace Im\V1\App\Action;

use UnexpectedValueException;

/**
 * Protobuf type <code>im.v1.App.Action.Type</code>
 */
class Type
{
    /**
     * 非预定义
     *
     * Generated from protobuf enum <code>UNDEFINED = 0;</code>
     */
    const UNDEFINED = 0;
    /**
     * 取消
     *
     * Generated from protobuf enum <code>CANCEL = 1;</code>
     */
    const CANCEL = 1;
    /**
     * 确定：OK
     *
     * Generated from protobuf enum <code>OK = 2;</code>
     */
    const OK = 2;
    /**
     * 确定：确认
     *
     * Generated from protobuf enum <code>CONFIRM = 3;</code>
     */
    const CONFIRM = 3;
    /**
     * 确定: 是
     *
     * Generated from protobuf enum <code>YES = 4;</code>
     */
    const YES = 4;
    /**
     * 取消：否
     *
     * Generated from protobuf enum <code>NO = 5;</code>
     */
    const NO = 5;
    /**
     * 拒绝
     *
     * Generated from protobuf enum <code>REJECT = 6;</code>
     */
    const REJECT = 6;
    /**
     * 同意/批准
     *
     * Generated from protobuf enum <code>APPROVE = 7;</code>
     */
    const APPROVE = 7;
    /**
     * 查看/详情
     *
     * Generated from protobuf enum <code>DETAILS = 8;</code>
     */
    const DETAILS = 8;

    private static $valueToName = [
        self::UNDEFINED => 'UNDEFINED',
        self::CANCEL => 'CANCEL',
        self::OK => 'OK',
        self::CONFIRM => 'CONFIRM',
        self::YES => 'YES',
        self::NO => 'NO',
        self::REJECT => 'REJECT',
        self::APPROVE => 'APPROVE',
        self::DETAILS => 'DETAILS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Im\V1\App_Action_Type::class);

