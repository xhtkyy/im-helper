<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/schema.proto

namespace Im\V1\User\Full;

use UnexpectedValueException;

/**
 * 用户标识符类型
 *
 * Protobuf type <code>im.v1.User.Full.Type</code>
 */
class Type
{
    /**
     * 个人账号标识符
     *
     * Generated from protobuf enum <code>OPEN_ID = 0;</code>
     */
    const OPEN_ID = 0;
    /**
     * 身份卡标识符：内部或外部身份卡
     *
     * Generated from protobuf enum <code>CARD_ID = 1;</code>
     */
    const CARD_ID = 1;
    /**
     * 员工号
     *
     * Generated from protobuf enum <code>STAFF_ID = 2;</code>
     */
    const STAFF_ID = 2;

    private static $valueToName = [
        self::OPEN_ID => 'OPEN_ID',
        self::CARD_ID => 'CARD_ID',
        self::STAFF_ID => 'STAFF_ID',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Im\V1\User_Full_Type::class);

