<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/schema.proto

namespace Im\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 用户对会话中消息的检查点发生改变
 * 即红点提醒：
 * 1. 红点的清除/重置；
 * 2. 红点的增加（检查点后新消息计数），客户端自行计数；
 * 3. 红点数据同步（服务端与客户端因离线计数基数不同，多端不同步），使用数据同步消息解决
 *
 * Generated from protobuf message <code>im.v1.CheckPoint</code>
 */
class CheckPoint extends \Google\Protobuf\Internal\Message
{
    protected $checkpoint;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $refer
     *           用户检查的最近一条消息，清零计数器并对此消息之后的消息重新计数
     *     @type int|string $timestamp
     *           也可以直接指定时间戳
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Im\V1\Schema::initOnce();
        parent::__construct($data);
    }

    /**
     * 用户检查的最近一条消息，清零计数器并对此消息之后的消息重新计数
     *
     * Generated from protobuf field <code>uint64 refer = 1;</code>
     * @return int|string
     */
    public function getRefer()
    {
        return $this->readOneof(1);
    }

    public function hasRefer()
    {
        return $this->hasOneof(1);
    }

    /**
     * 用户检查的最近一条消息，清零计数器并对此消息之后的消息重新计数
     *
     * Generated from protobuf field <code>uint64 refer = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setRefer($var)
    {
        GPBUtil::checkUint64($var);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * 也可以直接指定时间戳
     *
     * Generated from protobuf field <code>uint64 timestamp = 2;</code>
     * @return int|string
     */
    public function getTimestamp()
    {
        return $this->readOneof(2);
    }

    public function hasTimestamp()
    {
        return $this->hasOneof(2);
    }

    /**
     * 也可以直接指定时间戳
     *
     * Generated from protobuf field <code>uint64 timestamp = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTimestamp($var)
    {
        GPBUtil::checkUint64($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getCheckpoint()
    {
        return $this->whichOneof("checkpoint");
    }

}

