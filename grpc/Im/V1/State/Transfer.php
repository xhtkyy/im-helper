<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/schema.proto

namespace Im\V1\State;

use UnexpectedValueException;

/**
 * 通知源消息的状态发生了改变，收到通知消息的程序应对源消息作出相应的处理
 *
 * Protobuf type <code>im.v1.State.Transfer</code>
 */
class Transfer
{
    /**
     * 直接忽略源消息的状态和操作
     *
     * Generated from protobuf enum <code>STATE_IGNORED = 0;</code>
     */
    const STATE_IGNORED = 0;
    /**
     * 源消息状态已转变为：已撤回（由发件人发起）
     *
     * Generated from protobuf enum <code>STATE_RECALLED = 1;</code>
     */
    const STATE_RECALLED = 1;
    /**
     * 源消息状态已转变为：已撤销（由管理指令发起）
     *
     * Generated from protobuf enum <code>STATE_REVOKED = 2;</code>
     */
    const STATE_REVOKED = 2;
    /**
     * 源消息状态已转变为：被重新激活，恢复到新消息的初始操作状态
     *
     * Generated from protobuf enum <code>STATE_ENABLED = 3;</code>
     */
    const STATE_ENABLED = 3;
    /**
     * 源消息状态已转变为：已过期
     *
     * Generated from protobuf enum <code>STATE_OUTDATED = 4;</code>
     */
    const STATE_OUTDATED = 4;
    /**
     * 源消息状态已转变为：已在其它设备或程序处理
     *
     * Generated from protobuf enum <code>STATE_DONE = 5;</code>
     */
    const STATE_DONE = 5;
    /**
     * 源消息状态已转变为：已取消
     *
     * Generated from protobuf enum <code>STATE_CANCELLED = 6;</code>
     */
    const STATE_CANCELLED = 6;

    private static $valueToName = [
        self::STATE_IGNORED => 'STATE_IGNORED',
        self::STATE_RECALLED => 'STATE_RECALLED',
        self::STATE_REVOKED => 'STATE_REVOKED',
        self::STATE_ENABLED => 'STATE_ENABLED',
        self::STATE_OUTDATED => 'STATE_OUTDATED',
        self::STATE_DONE => 'STATE_DONE',
        self::STATE_CANCELLED => 'STATE_CANCELLED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Transfer::class, \Im\V1\State_Transfer::class);

