<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/sync.proto

namespace Im\V1;

use UnexpectedValueException;

/**
 * ApplyStatus 申请状态枚举
 *
 * Protobuf type <code>im.v1.ApplyStatus</code>
 */
class ApplyStatus
{
    /**
     * 待处理
     *
     * Generated from protobuf enum <code>WAIT = 0;</code>
     */
    const WAIT = 0;
    /**
     * 发起申请
     *
     * Generated from protobuf enum <code>SEND = 1;</code>
     */
    const SEND = 1;
    /**
     * 撤销
     *
     * Generated from protobuf enum <code>CANCEL = 2;</code>
     */
    const CANCEL = 2;
    /**
     * 拒绝
     *
     * Generated from protobuf enum <code>REJECT = 3;</code>
     */
    const REJECT = 3;
    /**
     * 通过
     *
     * Generated from protobuf enum <code>PASS = 4;</code>
     */
    const PASS = 4;
    /**
     * 解除
     *
     * Generated from protobuf enum <code>REMOVE = 5;</code>
     */
    const REMOVE = 5;

    private static $valueToName = [
        self::WAIT => 'WAIT',
        self::SEND => 'SEND',
        self::CANCEL => 'CANCEL',
        self::REJECT => 'REJECT',
        self::PASS => 'PASS',
        self::REMOVE => 'REMOVE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

