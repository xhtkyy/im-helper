<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/sync.proto

namespace Im\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>im.v1.Pagination</code>
 */
class Pagination extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int64 size = 1;</code>
     */
    protected $size = 0;
    /**
     * Generated from protobuf field <code>int64 index = 2;</code>
     */
    protected $index = 0;
    protected $raw;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $size
     *     @type int|string $index
     *     @type \Im\V1\PairQuery $pair
     *     @type \Im\V1\GroupQuery $group
     *     @type \Im\V1\MemberQuery $member
     *     @type \Im\V1\HistoryQuery $history
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Im\V1\Sync::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 size = 1;</code>
     * @return int|string
     */
    public function getSize()
    {
        return $this->size;
    }

    /**
     * Generated from protobuf field <code>int64 size = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSize($var)
    {
        GPBUtil::checkInt64($var);
        $this->size = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int64 index = 2;</code>
     * @return int|string
     */
    public function getIndex()
    {
        return $this->index;
    }

    /**
     * Generated from protobuf field <code>int64 index = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setIndex($var)
    {
        GPBUtil::checkInt64($var);
        $this->index = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.im.v1.PairQuery pair = 3;</code>
     * @return \Im\V1\PairQuery|null
     */
    public function getPair()
    {
        return $this->readOneof(3);
    }

    public function hasPair()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.im.v1.PairQuery pair = 3;</code>
     * @param \Im\V1\PairQuery $var
     * @return $this
     */
    public function setPair($var)
    {
        GPBUtil::checkMessage($var, \Im\V1\PairQuery::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.im.v1.GroupQuery group = 4;</code>
     * @return \Im\V1\GroupQuery|null
     */
    public function getGroup()
    {
        return $this->readOneof(4);
    }

    public function hasGroup()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.im.v1.GroupQuery group = 4;</code>
     * @param \Im\V1\GroupQuery $var
     * @return $this
     */
    public function setGroup($var)
    {
        GPBUtil::checkMessage($var, \Im\V1\GroupQuery::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.im.v1.MemberQuery member = 5;</code>
     * @return \Im\V1\MemberQuery|null
     */
    public function getMember()
    {
        return $this->readOneof(5);
    }

    public function hasMember()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.im.v1.MemberQuery member = 5;</code>
     * @param \Im\V1\MemberQuery $var
     * @return $this
     */
    public function setMember($var)
    {
        GPBUtil::checkMessage($var, \Im\V1\MemberQuery::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.im.v1.HistoryQuery history = 6;</code>
     * @return \Im\V1\HistoryQuery|null
     */
    public function getHistory()
    {
        return $this->readOneof(6);
    }

    public function hasHistory()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.im.v1.HistoryQuery history = 6;</code>
     * @param \Im\V1\HistoryQuery $var
     * @return $this
     */
    public function setHistory($var)
    {
        GPBUtil::checkMessage($var, \Im\V1\HistoryQuery::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getRaw()
    {
        return $this->whichOneof("raw");
    }

}

