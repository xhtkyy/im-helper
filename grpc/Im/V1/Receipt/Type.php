<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/schema.proto

namespace Im\V1\Receipt;

use UnexpectedValueException;

/**
 * Protobuf type <code>im.v1.Receipt.Type</code>
 */
class Type
{
    /**
     * 已读
     *
     * Generated from protobuf enum <code>READ = 0;</code>
     */
    const READ = 0;
    /**
     * 已处理
     *
     * Generated from protobuf enum <code>DONE = 1;</code>
     */
    const DONE = 1;
    /**
     * 已特别关注
     *
     * Generated from protobuf enum <code>FOLLOW = 2;</code>
     */
    const FOLLOW = 2;

    private static $valueToName = [
        self::READ => 'READ',
        self::DONE => 'DONE',
        self::FOLLOW => 'FOLLOW',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Im\V1\Receipt_Type::class);

