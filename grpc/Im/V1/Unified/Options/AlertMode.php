<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/schema.proto

namespace Im\V1\Unified\Options;

use UnexpectedValueException;

/**
 * 新消息通知
 *
 * Protobuf type <code>im.v1.Unified.Options.AlertMode</code>
 */
class AlertMode
{
    /**
     * 提示用户关注
     *
     * Generated from protobuf enum <code>ATTENTION = 0;</code>
     */
    const ATTENTION = 0;
    /**
     * 强提醒
     *
     * Generated from protobuf enum <code>ALERT = 1;</code>
     */
    const ALERT = 1;
    /**
     * 免打扰模式，简单提示
     *
     * Generated from protobuf enum <code>DND = 2;</code>
     */
    const DND = 2;
    /**
     * 安静模式，最小打扰
     *
     * Generated from protobuf enum <code>QUIET = 3;</code>
     */
    const QUIET = 3;
    /**
     * 禁止通知，不通知，忽略
     *
     * Generated from protobuf enum <code>DISABLE = 4;</code>
     */
    const DISABLE = 4;
    /**
     * 警告，重要提示，最高等级提醒
     *
     * Generated from protobuf enum <code>CAUTION = 5;</code>
     */
    const CAUTION = 5;

    private static $valueToName = [
        self::ATTENTION => 'ATTENTION',
        self::ALERT => 'ALERT',
        self::DND => 'DND',
        self::QUIET => 'QUIET',
        self::DISABLE => 'DISABLE',
        self::CAUTION => 'CAUTION',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(AlertMode::class, \Im\V1\Unified_Options_AlertMode::class);

