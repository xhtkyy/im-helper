<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/schema.proto

namespace Im\V1;

use UnexpectedValueException;

/**
 * PairTypCode 单聊类型
 *
 * Protobuf type <code>im.v1.PairTypCode</code>
 */
class PairTypCode
{
    /**
     * 好友
     *
     * Generated from protobuf enum <code>FRIEND = 0;</code>
     */
    const FRIEND = 0;
    /**
     * 商务
     *
     * Generated from protobuf enum <code>BUSINESS = 1;</code>
     */
    const BUSINESS = 1;
    /**
     * 同事
     *
     * Generated from protobuf enum <code>CO_WORKER = 2;</code>
     */
    const CO_WORKER = 2;
    /**
     * 临时
     *
     * Generated from protobuf enum <code>TEMPORARY = 3;</code>
     */
    const TEMPORARY = 3;
    /**
     * 咨询
     *
     * Generated from protobuf enum <code>CONSULT = 4;</code>
     */
    const CONSULT = 4;

    private static $valueToName = [
        self::FRIEND => 'FRIEND',
        self::BUSINESS => 'BUSINESS',
        self::CO_WORKER => 'CO_WORKER',
        self::TEMPORARY => 'TEMPORARY',
        self::CONSULT => 'CONSULT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

