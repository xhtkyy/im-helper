<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/sync.proto

namespace Im\V1;

use UnexpectedValueException;

/**
 * Protobuf type <code>im.v1.NotifyScene</code>
 */
class NotifyScene
{
    /**
     * 创建
     *
     * Generated from protobuf enum <code>CREATE = 0;</code>
     */
    const CREATE = 0;
    /**
     * 更新
     *
     * Generated from protobuf enum <code>UPDATE = 1;</code>
     */
    const UPDATE = 1;
    /**
     * 删除
     *
     * Generated from protobuf enum <code>DELETE = 2;</code>
     */
    const DELETE = 2;
    /**
     * 批量删除
     *
     * Generated from protobuf enum <code>BATCH_DEL = 3;</code>
     */
    const BATCH_DEL = 3;
    /**
     * 批量添加
     *
     * Generated from protobuf enum <code>BATCH_ADD = 4;</code>
     */
    const BATCH_ADD = 4;
    /**
     * 群转让
     *
     * Generated from protobuf enum <code>OWNER_TRANSFER = 5;</code>
     */
    const OWNER_TRANSFER = 5;
    /**
     * 入群申请
     *
     * Generated from protobuf enum <code>GROUP_APPLY = 6;</code>
     */
    const GROUP_APPLY = 6;

    private static $valueToName = [
        self::CREATE => 'CREATE',
        self::UPDATE => 'UPDATE',
        self::DELETE => 'DELETE',
        self::BATCH_DEL => 'BATCH_DEL',
        self::BATCH_ADD => 'BATCH_ADD',
        self::OWNER_TRANSFER => 'OWNER_TRANSFER',
        self::GROUP_APPLY => 'GROUP_APPLY',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

