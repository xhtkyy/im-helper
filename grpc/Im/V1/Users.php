<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/schema.proto

namespace Im\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 一组用户
 *
 * Generated from protobuf message <code>im.v1.Users</code>
 */
class Users extends \Google\Protobuf\Internal\Message
{
    protected $manifests;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Im\V1\User\Bitmap $bitmap
     *     @type \Im\V1\User\PBList $list
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Im\V1\Schema::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.im.v1.User.Bitmap bitmap = 1;</code>
     * @return \Im\V1\User\Bitmap|null
     */
    public function getBitmap()
    {
        return $this->readOneof(1);
    }

    public function hasBitmap()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.im.v1.User.Bitmap bitmap = 1;</code>
     * @param \Im\V1\User\Bitmap $var
     * @return $this
     */
    public function setBitmap($var)
    {
        GPBUtil::checkMessage($var, \Im\V1\User\Bitmap::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.im.v1.User.List list = 2;</code>
     * @return \Im\V1\User\PBList|null
     */
    public function getList()
    {
        return $this->readOneof(2);
    }

    public function hasList()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.im.v1.User.List list = 2;</code>
     * @param \Im\V1\User\PBList $var
     * @return $this
     */
    public function setList($var)
    {
        GPBUtil::checkMessage($var, \Im\V1\User\PBList::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getManifests()
    {
        return $this->whichOneof("manifests");
    }

}

