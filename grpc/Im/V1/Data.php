<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/schema.proto

namespace Im\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 数据交换：技术上不限于同一用户，业务上可以限定于同一用户
 *
 * Generated from protobuf message <code>im.v1.Data</code>
 */
class Data extends \Google\Protobuf\Internal\Message
{
    /**
     * 一般性的范围指定，交换范围的默认限制
     *
     * Generated from protobuf field <code>.im.v1.Data.Scope scope = 1;</code>
     */
    protected $scope = 0;
    /**
     * 大类
     *
     * Generated from protobuf field <code>.im.v1.Data.Category category = 2;</code>
     */
    protected $category = 0;
    /**
     * 数据项键名
     *
     * Generated from protobuf field <code>string key = 3;</code>
     */
    protected $key = '';
    /**
     * 同步的数据
     *
     * Generated from protobuf field <code>bytes data = 4;</code>
     */
    protected $data = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $scope
     *           一般性的范围指定，交换范围的默认限制
     *     @type int $category
     *           大类
     *     @type string $key
     *           数据项键名
     *     @type string $data
     *           同步的数据
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Im\V1\Schema::initOnce();
        parent::__construct($data);
    }

    /**
     * 一般性的范围指定，交换范围的默认限制
     *
     * Generated from protobuf field <code>.im.v1.Data.Scope scope = 1;</code>
     * @return int
     */
    public function getScope()
    {
        return $this->scope;
    }

    /**
     * 一般性的范围指定，交换范围的默认限制
     *
     * Generated from protobuf field <code>.im.v1.Data.Scope scope = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setScope($var)
    {
        GPBUtil::checkEnum($var, \Im\V1\Data\Scope::class);
        $this->scope = $var;

        return $this;
    }

    /**
     * 大类
     *
     * Generated from protobuf field <code>.im.v1.Data.Category category = 2;</code>
     * @return int
     */
    public function getCategory()
    {
        return $this->category;
    }

    /**
     * 大类
     *
     * Generated from protobuf field <code>.im.v1.Data.Category category = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setCategory($var)
    {
        GPBUtil::checkEnum($var, \Im\V1\Data\Category::class);
        $this->category = $var;

        return $this;
    }

    /**
     * 数据项键名
     *
     * Generated from protobuf field <code>string key = 3;</code>
     * @return string
     */
    public function getKey()
    {
        return $this->key;
    }

    /**
     * 数据项键名
     *
     * Generated from protobuf field <code>string key = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->key = $var;

        return $this;
    }

    /**
     * 同步的数据
     *
     * Generated from protobuf field <code>bytes data = 4;</code>
     * @return string
     */
    public function getData()
    {
        return $this->data;
    }

    /**
     * 同步的数据
     *
     * Generated from protobuf field <code>bytes data = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setData($var)
    {
        GPBUtil::checkString($var, False);
        $this->data = $var;

        return $this;
    }

}

