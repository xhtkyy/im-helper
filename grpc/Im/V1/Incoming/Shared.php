<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/schema.proto

namespace Im\V1\Incoming;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 共享消息，针对指定的人群中所有的人
 *
 * Generated from protobuf message <code>im.v1.Incoming.Shared</code>
 */
class Shared extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.im.v1.Users receivers = 1;</code>
     */
    protected $receivers = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Im\V1\Users $receivers
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Im\V1\Schema::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.im.v1.Users receivers = 1;</code>
     * @return \Im\V1\Users|null
     */
    public function getReceivers()
    {
        return $this->receivers;
    }

    public function hasReceivers()
    {
        return isset($this->receivers);
    }

    public function clearReceivers()
    {
        unset($this->receivers);
    }

    /**
     * Generated from protobuf field <code>.im.v1.Users receivers = 1;</code>
     * @param \Im\V1\Users $var
     * @return $this
     */
    public function setReceivers($var)
    {
        GPBUtil::checkMessage($var, \Im\V1\Users::class);
        $this->receivers = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Shared::class, \Im\V1\Incoming_Shared::class);

