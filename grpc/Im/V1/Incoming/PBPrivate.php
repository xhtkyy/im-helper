<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: im/v1/schema.proto

namespace Im\V1\Incoming;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 专有消息，某个特定的收件人
 *
 * Generated from protobuf message <code>im.v1.Incoming.Private</code>
 */
class PBPrivate extends \Google\Protobuf\Internal\Message
{
    /**
     * 指定的收件人专有
     *
     * Generated from protobuf field <code>.im.v1.User receiver = 1;</code>
     */
    protected $receiver = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Im\V1\User $receiver
     *           指定的收件人专有
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Im\V1\Schema::initOnce();
        parent::__construct($data);
    }

    /**
     * 指定的收件人专有
     *
     * Generated from protobuf field <code>.im.v1.User receiver = 1;</code>
     * @return \Im\V1\User|null
     */
    public function getReceiver()
    {
        return $this->receiver;
    }

    public function hasReceiver()
    {
        return isset($this->receiver);
    }

    public function clearReceiver()
    {
        unset($this->receiver);
    }

    /**
     * 指定的收件人专有
     *
     * Generated from protobuf field <code>.im.v1.User receiver = 1;</code>
     * @param \Im\V1\User $var
     * @return $this
     */
    public function setReceiver($var)
    {
        GPBUtil::checkMessage($var, \Im\V1\User::class);
        $this->receiver = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PBPrivate::class, \Im\V1\Incoming_Private::class);

