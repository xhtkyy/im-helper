<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: iam/v1/Base.proto

namespace Iam\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 频率限制
 *
 * Generated from protobuf message <code>iam.v1.LimitRate</code>
 */
class LimitRate extends \Google\Protobuf\Internal\Message
{
    /**
     * 下一次的间隔时长，单位：秒
     *
     * Generated from protobuf field <code>int64 retry_after = 1;</code>
     */
    protected $retry_after = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $retry_after
     *           下一次的间隔时长，单位：秒
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Iam\V1\Base::initOnce();
        parent::__construct($data);
    }

    /**
     * 下一次的间隔时长，单位：秒
     *
     * Generated from protobuf field <code>int64 retry_after = 1;</code>
     * @return int|string
     */
    public function getRetryAfter()
    {
        return $this->retry_after;
    }

    /**
     * 下一次的间隔时长，单位：秒
     *
     * Generated from protobuf field <code>int64 retry_after = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setRetryAfter($var)
    {
        GPBUtil::checkInt64($var);
        $this->retry_after = $var;

        return $this;
    }

}

