<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: iam/v1/Base.proto

namespace Iam\V1;

use UnexpectedValueException;

/**
 * 保护区定义
 *
 * Protobuf type <code>iam.v1.ProtectedZone</code>
 */
class ProtectedZone
{
    /**
     * 公共区域
     *
     * Generated from protobuf enum <code>Public = 0;</code>
     */
    const PBPublic = 0;
    /**
     * 根据上下文（传入的参数和发起请求的用户）
     *
     * Generated from protobuf enum <code>Context = 1;</code>
     */
    const Context = 1;
    /**
     * 保护区域，查验访问凭证
     *
     * Generated from protobuf enum <code>Protected = 2;</code>
     */
    const PBProtected = 2;
    /**
     * 私人区域，仅限访问凭证持有者访问拥有的资源，查验访问凭证并且限定访问当前用户资源
     *
     * Generated from protobuf enum <code>Private = 3;</code>
     */
    const PBPrivate = 3;
    /**
     * 安全区域，查验访问凭证，仅限特权身份
     *
     * Generated from protobuf enum <code>Security = 4;</code>
     */
    const Security = 4;

    private static $valueToName = [
        self::PBPublic => 'PBPublic',
        self::Context => 'Context',
        self::PBProtected => 'PBProtected',
        self::PBPrivate => 'PBPrivate',
        self::Security => 'Security',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

