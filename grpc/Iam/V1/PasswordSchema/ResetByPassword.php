<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: iam/v1/hub.proto

namespace Iam\V1\PasswordSchema;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 重置密码请求：支持正常重置与异常重置两种情况，不适用于初次设置，不适用于忘记密码，必须携带访问凭证
 *
 * Generated from protobuf message <code>iam.v1.PasswordSchema.ResetByPassword</code>
 */
class ResetByPassword extends \Google\Protobuf\Internal\Message
{
    /**
     * 原来的密码，如果有设置才可以使用，原来没有设置无法使用
     *
     * Generated from protobuf field <code>string secret = 1 [(.validate.rules) = {</code>
     */
    protected $secret = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $secret
     *           原来的密码，如果有设置才可以使用，原来没有设置无法使用
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Iam\V1\Hub::initOnce();
        parent::__construct($data);
    }

    /**
     * 原来的密码，如果有设置才可以使用，原来没有设置无法使用
     *
     * Generated from protobuf field <code>string secret = 1 [(.validate.rules) = {</code>
     * @return string
     */
    public function getSecret()
    {
        return $this->secret;
    }

    /**
     * 原来的密码，如果有设置才可以使用，原来没有设置无法使用
     *
     * Generated from protobuf field <code>string secret = 1 [(.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setSecret($var)
    {
        GPBUtil::checkString($var, True);
        $this->secret = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ResetByPassword::class, \Iam\V1\PasswordSchema_ResetByPassword::class);

