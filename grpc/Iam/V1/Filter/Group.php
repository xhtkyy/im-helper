<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: iam/v1/base.proto

namespace Iam\V1\Filter;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 筛选组
 *
 * Generated from protobuf message <code>iam.v1.Filter.Group</code>
 */
class Group extends \Google\Protobuf\Internal\Message
{
    /**
     * 规则集
     *
     * Generated from protobuf field <code>repeated .iam.v1.Filter.Rule rules = 1;</code>
     */
    private $rules;
    /**
     * 组模式
     *
     * Generated from protobuf field <code>.iam.v1.Filter.Group.Mode mode = 2;</code>
     */
    protected $mode = 0;
    /**
     * 条件取反
     *
     * Generated from protobuf field <code>bool not = 3;</code>
     */
    protected $not = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Iam\V1\Filter\Rule[]|\Google\Protobuf\Internal\RepeatedField $rules
     *           规则集
     *     @type int $mode
     *           组模式
     *     @type bool $not
     *           条件取反
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Iam\V1\Base::initOnce();
        parent::__construct($data);
    }

    /**
     * 规则集
     *
     * Generated from protobuf field <code>repeated .iam.v1.Filter.Rule rules = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getRules()
    {
        return $this->rules;
    }

    /**
     * 规则集
     *
     * Generated from protobuf field <code>repeated .iam.v1.Filter.Rule rules = 1;</code>
     * @param \Iam\V1\Filter\Rule[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setRules($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Iam\V1\Filter\Rule::class);
        $this->rules = $arr;

        return $this;
    }

    /**
     * 组模式
     *
     * Generated from protobuf field <code>.iam.v1.Filter.Group.Mode mode = 2;</code>
     * @return int
     */
    public function getMode()
    {
        return $this->mode;
    }

    /**
     * 组模式
     *
     * Generated from protobuf field <code>.iam.v1.Filter.Group.Mode mode = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMode($var)
    {
        GPBUtil::checkEnum($var, \Iam\V1\Filter\Group\Mode::class);
        $this->mode = $var;

        return $this;
    }

    /**
     * 条件取反
     *
     * Generated from protobuf field <code>bool not = 3;</code>
     * @return bool
     */
    public function getNot()
    {
        return $this->not;
    }

    /**
     * 条件取反
     *
     * Generated from protobuf field <code>bool not = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setNot($var)
    {
        GPBUtil::checkBool($var);
        $this->not = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Group::class, \Iam\V1\Filter_Group::class);

