<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: iam/v1/base.proto

namespace Iam\V1\Filter;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * 匹配表达式
 *
 * Generated from protobuf message <code>iam.v1.Filter.Match</code>
 */
class PBMatch extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string field = 1;</code>
     */
    protected $field = '';
    /**
     * Generated from protobuf field <code>.iam.v1.Filter.Operator operator = 2;</code>
     */
    protected $operator = 0;
    /**
     * Generated from protobuf field <code>string value = 3;</code>
     */
    protected $value = '';
    /**
     * Generated from protobuf field <code>.iam.v1.Filter.ValueType type = 4;</code>
     */
    protected $type = 0;
    /**
     * 条件取反
     *
     * Generated from protobuf field <code>bool not = 5;</code>
     */
    protected $not = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $field
     *     @type int $operator
     *     @type string $value
     *     @type int $type
     *     @type bool $not
     *           条件取反
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Iam\V1\Base::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string field = 1;</code>
     * @return string
     */
    public function getField()
    {
        return $this->field;
    }

    /**
     * Generated from protobuf field <code>string field = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setField($var)
    {
        GPBUtil::checkString($var, True);
        $this->field = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.iam.v1.Filter.Operator operator = 2;</code>
     * @return int
     */
    public function getOperator()
    {
        return $this->operator;
    }

    /**
     * Generated from protobuf field <code>.iam.v1.Filter.Operator operator = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setOperator($var)
    {
        GPBUtil::checkEnum($var, \Iam\V1\Filter\Operator::class);
        $this->operator = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string value = 3;</code>
     * @return string
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * Generated from protobuf field <code>string value = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->value = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.iam.v1.Filter.ValueType type = 4;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.iam.v1.Filter.ValueType type = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Iam\V1\Filter\ValueType::class);
        $this->type = $var;

        return $this;
    }

    /**
     * 条件取反
     *
     * Generated from protobuf field <code>bool not = 5;</code>
     * @return bool
     */
    public function getNot()
    {
        return $this->not;
    }

    /**
     * 条件取反
     *
     * Generated from protobuf field <code>bool not = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setNot($var)
    {
        GPBUtil::checkBool($var);
        $this->not = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PBMatch::class, \Iam\V1\Filter_Match::class);

